---
import NavigationBar from "../components/NavigationBar.astro";
import { PageType } from "../components/NavigationBar.astro";
import Layout from "../layouts/BaseLayout.astro";

import formatDateSmall from "../lib/formatDateSmall";

const { frontmatter } = Astro.props;
---

<Layout title={frontmatter.title}>
  <NavigationBar pageType={PageType.Article} />
  <main>
    <h1>{frontmatter.title}</h1>
    { (frontmatter.date_published && frontmatter.date_edited) ? 
      <p>Published on <time datetime={frontmatter.date_published}>{formatDateSmall(frontmatter.date_published)}</time>. Edited on <time datetime={frontmatter.date_edited}>{formatDateSmall(frontmatter.date_edited)}</time>.</p>
      :
      <p>Published on <time datetime={frontmatter.date_published}>{frontmatter.date_published && formatDateSmall(frontmatter.date_published)}</time>.</p>
    }
    <div class="title-spacer"/>
    <slot />
  </main>
</Layout>

<style>
  h1 {
    margin-bottom: 0;
  }

  p {
    /* margin-top: 0; */
    font-size: 0.9rem;
  }

  .title-spacer {
    height: 1.5rem;
  }
</style>

<style lang="scss" is:global>
  main {
    margin: 0 1rem;
  }

  p {
    text-align: justify;
  }

  %container {
    margin-left: auto;
    margin-right: auto;
    max-width: 40rem;
  }

  %big-container {
    margin: 0 auto;
    max-width: 50rem;
  }

  .footnotes {
    @extend %container;
  }

  .big-container {
    @extend %big-container;

    iframe {
      aspect-ratio: 16 / 9;
      width: 100%;
      max-width: 50rem;
    }

    .iframe-container {
      border-radius: 8px;
      overflow: hidden;
      aspect-ratio: 16 / 9;
      width: 100%;
      max-width: 50rem;
    }

    img {
      display: block;
      border-radius: 8px;
      margin: 0 auto;
    }
  }

  .astro-code {
    @extend %big-container;

    border-radius: 8px;
    padding: 0.5rem;
    font-size: 1rem;
  }

  h1, h2, h3, h4, h5, h6 {
    @extend %container;

    font-weight: bold;
  }

  p, ul, ol {
    @extend %container;
    box-sizing: border-box;
  }

  blockquote {
    @extend %container;

    border-radius: 8px;
    background: #ffffff;
    
    box-sizing: border-box;
    padding: 0.5rem 1rem;

    p {
      margin: 0;
    }
  }

  sup {
    line-height: 0;
  }

  code:not(pre > code) {
    color: #22863a;
    background-color: #EDF7ED;
    padding: 2px 4px;
    border-radius: 3px;
  }

  /* TEMP SOLUTION, ref https://css-tricks.com/better-line-breaks-for-long-urls/ */
  a {
    /* These are technically the same, but use both */
    overflow-wrap: break-word;
    word-wrap: break-word;
  
    word-break: break-word;
  
    /* Adds a hyphen where the word breaks, if supported (No Blink) */
    hyphens: auto;
  }

  @media (prefers-color-scheme: dark) {
    .astro-code, .astro-code span {
      color: var(--shiki-dark) !important;
      background-color: var(--shiki-dark-bg) !important;
      /* Optional, if you also want font styles */
      font-style: var(--shiki-dark-font-style) !important;
      font-weight: var(--shiki-dark-font-weight) !important;
      text-decoration: var(--shiki-dark-text-decoration) !important;
    }

    code:not(pre > code) {
      color: #3fb950;
      background-color: #24292e;
    }

    blockquote {
      background: #24292e;
    }
  }
</style>
